syntax = "proto3";

package user;

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
// import "google/protobuf/duration.proto";
// import "google/protobuf/field_mask.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

// 生成的路径及文件名
// option go_package = "github.com/weisd/web-kit/api/protobuf-spec;user";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    version: "1.0";
  };
  external_docs: {
    url: "https://github.com/weisd/web-kit";
    description: "gRPC web-kit repository";
  }
  schemes: HTTPS;
};

// Enable custom Marshal method.
option (gogoproto.marshaler_all) = true;
// Enable custom Unmarshal method.
option (gogoproto.unmarshaler_all) = true;
// Enable custom Size method (Required by Marshal and Unmarshal).
option (gogoproto.sizer_all) = true;
// Enable registration with golang/protobuf for the grpc-gateway.
option (gogoproto.goproto_registration) = true;
// Enable generation of XXX_MessageName methods for grpc-go/status.
option (gogoproto.messagename_all) = true;


service UserService {
    rpc AddUser(User) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/api/v1/users"
            body: "*"
        };
    }
    // rpc ListUsers(ListUsersRequest) returns (stream User) {
    //     option (google.api.http) = {
    //         get: "/api/v1/users"
    //     };
    // }
    // rpc ListUsersByRole(UserRole) returns (stream User) {
    //     option (google.api.http) = {
    //         get: "/api/v1/users/role"
    //     };
    // }
    // rpc UpdateUser(UpdateUserRequest) returns (User) {
    //     option (google.api.http) = {
    //         patch: "/api/v1/users/{user.id}"
    //         body: "user"
    //     };
    // }
}

// UserStatus 用户状态
enum UserStatus {
    // 未激活
    None = 0;
    // 正常
    Normal = 1;
    // 禁用
    Disable = 2;
}

// User User
message User {
    int64 ID = 1;
    int64 phone = 2;
    string email = 3;
    string nick_name = 4;
    string password = 5;
    string salt = 6;
    string avatar = 7;
    UserStatus status = 8;
    google.protobuf.Timestamp created_at = 9 [(gogoproto.stdtime) = true];
    google.protobuf.Timestamp updated_at = 10 [(gogoproto.stdtime) = true];
}

